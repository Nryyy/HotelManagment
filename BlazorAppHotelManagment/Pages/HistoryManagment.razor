@page "/history-management"
@using Enteties
@inject HotelManagmentLogic.Services.Commands.StayHistoryCommandService StayHistoryCommandService
@inject HotelManagmentLogic.Services.Querys.StayHistoryQueryService StayHistoryQueryService
@inject HotelManagmentLogic.Services.Querys.GuestQueryService GuestQueryService
@inject HotelManagmentLogic.Services.Querys.RoomQueryService RoomQueryService

<h3>Stay History Management</h3>

<EditForm Model="@stayHistoryModel" OnValidSubmit="@HandleValidSubmitStayHistory">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group mb-4">
        <label for="guestId" class="form-label">Guest:</label>
        <InputSelect id="guestId" @bind-Value="stayHistoryModel.GuestId" class="form-control form-control-lg">
            <option value="">Select Guest</option>
            @foreach (var guest in guests)
            {
                <option value="@guest.Id">@guest.FirstName @guest.LastName</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => stayHistoryModel.GuestId)" />
    </div>
    <div class="form-group mb-4">
        <label for="roomId" class="form-label">Room:</label>
        <InputSelect id="roomId" @bind-Value="stayHistoryModel.RoomId" class="form-control form-control-lg">
            <option value="">Select Room</option>
            @foreach (var room in rooms)
            {
                <option value="@room.Id">@room.RoomNumber</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => stayHistoryModel.RoomId)" />
    </div>
    <div class="form-group mb-4">
        <label for="checkInDate" class="form-label">Check-In Date:</label>
        <InputDate id="checkInDate" @bind-Value="stayHistoryModel.CheckInDate" class="form-control form-control-lg" />
        <ValidationMessage For="@(() => stayHistoryModel.CheckInDate)" />
    </div>
    <div class="form-group mb-4">
        <label for="checkOutDate" class="form-label">Check-Out Date:</label>
        <InputDate id="checkOutDate" @bind-Value="stayHistoryModel.CheckOutDate" class="form-control form-control-lg" />
        <ValidationMessage For="@(() => stayHistoryModel.CheckOutDate)" />
    </div>

    <button type="submit" class="btn btn-primary mt-2">Save Stay History</button>
</EditForm>

<hr />

<h4>Stay Histories List</h4>
<table class="table table-striped table-hover">
    <thead class="table-dark">
        <tr>
            <th>ID</th>
            <th>Guest</th>
            <th>Room</th>
            <th>Check-In Date</th>
            <th>Check-Out Date</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (stayHistories.Any())
        {
            @foreach (var stayHistory in stayHistories)
            {
                <tr>
                    <td>@stayHistory.Id</td>
                    <td>@stayHistory.Guest?.FirstName @stayHistory.Guest?.LastName</td>
                    <td>@stayHistory.Room?.RoomNumber</td>
                    <td>@stayHistory.CheckInDate.ToShortDateString()</td>
                    <td>@stayHistory.CheckOutDate.ToShortDateString()</td>
                    <td>
                        <button class="btn btn-sm btn-primary" @onclick="() => EditStayHistory(stayHistory)">Edit</button>
                        <button class="btn btn-sm btn-danger" @onclick="() => DeleteStayHistory(stayHistory.Id)">Delete</button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="6" class="text-center">No stay histories found.</td>
            </tr>
        }
    </tbody>
</table>

@code {
    private StayHistory stayHistoryModel = new StayHistory();
    private List<StayHistory> stayHistories = new List<StayHistory>();
    private List<Guest> guests = new List<Guest>();
    private List<Room> rooms = new List<Room>();

    protected override async Task OnInitializedAsync()
    {
        await LoadStayHistories();
        await LoadGuests();
        await LoadRooms();
    }

    private async Task LoadStayHistories()
    {
        var result = await StayHistoryQueryService.GetAllStayHistoryAsync();
        stayHistories = result?.ToList() ?? new List<StayHistory>();
    }

    private async Task LoadGuests()
    {
        var result = await GuestQueryService.GetAllGuestsAsync();
        guests = result?.ToList() ?? new List<Guest>();
    }

    private async Task LoadRooms()
    {
        var result = await RoomQueryService.GetAllRooms();
        rooms = result?.ToList() ?? new List<Room>();
    }

    private async Task HandleValidSubmitStayHistory()
    {
        if (stayHistoryModel.Id == 0)
        {
            await StayHistoryCommandService.AddStayHostoryAsync(stayHistoryModel);
        }
        else
        {
            await StayHistoryCommandService.UpdateStayHostoryAsync(stayHistoryModel);
        }

        stayHistoryModel = new StayHistory(); // Reset the form
        await LoadStayHistories(); // Refresh the list
    }

    private void EditStayHistory(StayHistory stayHistory)
    {
        stayHistoryModel = new StayHistory
            {
                Id = stayHistory.Id,
                GuestId = stayHistory.GuestId,
                RoomId = stayHistory.RoomId,
                CheckInDate = stayHistory.CheckInDate,
                CheckOutDate = stayHistory.CheckOutDate
            };
    }

    private async Task DeleteStayHistory(int id)
    {
        await StayHistoryCommandService.DeleteStayHostoryAsync(id);
        await LoadStayHistories(); // Refresh the list after deleting
    }
}


